coord_fixed()
# --- This is the key change ---
# Set the p-values for the lower triangle to NA
heatmap_data[as.integer(variant_A) > as.integer(variant_B), p_epistasis := NA]
all_vars <- sort(unique(c(heatmap_data$variant_A, heatmap_data$variant_B)))
# Convert variant columns to factors to enforce the sorted order
heatmap_data[, variant_A := factor(variant_A, levels = all_vars)]
heatmap_data[, variant_B := factor(variant_B, levels = all_vars)]
heatmap_data = heatmap_data[as.integer(variant_A) <= as.integer(variant_B)]
ggplot(heatmap_data, aes(x = variant_A, y = variant_B, fill = p_epistasis)) +
geom_tile(color = "grey85") +
# Use scale_fill_viridis_c() for a continuous viridis color scale
scale_fill_viridis_c(
name = "p-epistasis",
option = "D", # Option "D" is the default viridis palette
limits = c(0, 0.25),
oob = scales::squish, # Handles values outside the limits gracefully
na.value = "grey50" # Color for any missing p-values on the diagonal
) +
# Ensure the axes include all variants to maintain the square shape
scale_x_discrete(limits = all_vars, drop = FALSE) +
scale_y_discrete(limits = all_vars, drop = FALSE) +
theme_minimal() +
labs(
title = "Epistasis Between Significantly Interacting Variants",
x = "Variant A",
y = "Variant B"
) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, face = "italic"),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank(),
axis.text.y = element_text(face = "italic")
) +
coord_fixed()
# --- Step 2: Filter the original data to interactions between these variants ---
heatmap_data <- TCGA_gene_epi[variant_A %in% significant_variants &
variant_B %in% significant_variants]
# --- Step 1: Define the order of variants FIRST ---
all_vars <- sort(unique(c(heatmap_data$variant_A, heatmap_data$variant_B)))
# --- Step 2: Convert variant columns to factors to enforce the order ---
# Do this on your original data
heatmap_data[, variant_A := factor(variant_A, levels = all_vars)]
heatmap_data[, variant_B := factor(variant_B, levels = all_vars)]
# --- Step 3: Now, filter the data to keep only the upper triangle and diagonal ---
# This single line replaces the two lines you had
heatmap_data_upper <- heatmap_data[as.integer(variant_A) <= as.integer(variant_B)]
# --- Step 4: Create the plot with the correctly filtered data ---
ggplot(heatmap_data_upper, aes(x = variant_A, y = variant_B, fill = p_epistasis)) +
geom_tile(color = "grey85") +
# Use scale_fill_viridis_c() for a continuous viridis color scale
scale_fill_viridis_c(
name = "p-epistasis",
option = "D", # Option "D" is the default viridis palette
limits = c(0, 0.25),
oob = scales::squish, # Handles values outside the limits gracefully
na.value = "grey50" # Color for any missing p-values on the diagonal
) +
# Ensure the axes include all variants to maintain the square shape
scale_x_discrete(limits = all_vars, drop = FALSE) +
scale_y_discrete(limits = all_vars, drop = FALSE) +
theme_minimal() +
labs(
title = "Epistasis Between Significantly Interacting Variants",
x = "Variant A",
y = "Variant B"
) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, face = "italic"),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank(),
axis.text.y = element_text(face = "italic")
) +
coord_fixed()
TCGA_gene_epi = tcga_cesa$epistasis$TCGA_gene_epi
significant_variants <- unique(
unlist(TCGA_gene_epi[p_epistasis <= 0.05, .(variant_A, variant_B)])
)
# --- Step 2: Filter the original data to interactions between these variants ---
heatmap_data <- TCGA_gene_epi[variant_A %in% significant_variants &
variant_B %in% significant_variants]
# --- Step 1: Define the order of variants FIRST ---
all_vars <- sort(unique(c(heatmap_data$variant_A, heatmap_data$variant_B)))
# --- Step 2: Convert variant columns to factors to enforce the order ---
# Do this on your original data
heatmap_data[, variant_A := factor(variant_A, levels = all_vars)]
heatmap_data[, variant_B := factor(variant_B, levels = all_vars)]
# --- Step 3: Now, filter the data to keep only the upper triangle and diagonal ---
# This single line replaces the two lines you had
heatmap_data_upper <- heatmap_data[as.integer(variant_A) <= as.integer(variant_B)]
# --- Step 4: Create the plot with the correctly filtered data ---
ggplot(heatmap_data_upper, aes(x = variant_A, y = variant_B, fill = p_epistasis)) +
geom_tile(color = "grey85") +
# Use scale_fill_viridis_c() for a continuous viridis color scale
scale_fill_viridis_c(
name = "p-epistasis",
option = "D", # Option "D" is the default viridis palette
limits = c(0, 0.25),
oob = scales::squish, # Handles values outside the limits gracefully
na.value = "grey50" # Color for any missing p-values on the diagonal
) +
# Ensure the axes include all variants to maintain the square shape
scale_x_discrete(limits = all_vars, drop = FALSE) +
scale_y_discrete(limits = all_vars, drop = FALSE) +
theme_minimal() +
labs(
title = "Epistasis Between Significantly Interacting Variants",
x = "Variant A",
y = "Variant B"
) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, face = "italic"),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank(),
axis.text.y = element_text(face = "italic")
) +
coord_fixed()
TCGA_gene_epi = tcga_cesa$epistasis$TCGA_gene_epi
significant_variants <- unique(
unlist(TCGA_gene_epi[p_epistasis <= 0.05, .(variant_A, variant_B)])
)
heatmap_data <- TCGA_gene_epi[variant_A %in% significant_variants &
variant_B %in% significant_variants]
ggplot(heatmap_data_upper, aes(x = variant_A, y = variant_B, fill = p_epistasis)) +
geom_tile(color = "grey85") +
# Use scale_fill_viridis_c() for a continuous viridis color scale
scale_fill_viridis_c(
name = "p-epistasis",
option = "D", # Option "D" is the default viridis palette
limits = c(0, 0.25),
oob = scales::squish, # Handles values outside the limits gracefully
na.value = "grey50" # Color for any missing p-values on the diagonal
) +
# Ensure the axes include all variants to maintain the square shape
scale_x_discrete(limits = all_vars, drop = FALSE) +
scale_y_discrete(limits = all_vars, drop = FALSE) +
theme_minimal() +
labs(
title = "Epistasis Between Significantly Interacting Variants",
x = "Variant A",
y = "Variant B"
) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, face = "italic"),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank(),
axis.text.y = element_text(face = "italic")
) +
coord_fixed()
ggplot(heatmap_data_upper, aes(x = variant_A, y = variant_B, fill = p_epistasis)) +
geom_tile(color = "grey85") +
# Use scale_fill_viridis_c() for a continuous viridis color scale
scale_fill_viridis_c(
name = "p-epistasis",
option = "D", # Option "D" is the default viridis palette
limits = c(0, 0.25),
oob = scales::squish, # Handles values outside the limits gracefully
na.value = "grey50" # Color for any missing p-values on the diagonal
) +
# Ensure the axes include all variants to maintain the square shape
scale_x_discrete(limits = all_vars, drop = FALSE) +
scale_y_discrete(limits = all_vars, drop = FALSE) +
theme_minimal() +
labs(
x = "Variant A",
y = "Variant B"
) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, face = "italic"),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank(),
axis.text.y = element_text(face = "italic")
) +
coord_fixed()
ggplot(heatmap_data_upper, aes(x = variant_A, y = variant_B, fill = p_epistasis)) +
geom_tile(color = "grey85") +
# Use scale_fill_viridis_c() for a continuous viridis color scale
scale_fill_viridis_c(
name = "p-epistasis",
option = "D", # Option "D" is the default viridis palette
limits = c(0, 0.25),
oob = scales::squish, # Handles values outside the limits gracefully
na.value = "red" # Color for any missing p-values on the diagonal
) +
# Ensure the axes include all variants to maintain the square shape
scale_x_discrete(limits = all_vars, drop = FALSE) +
scale_y_discrete(limits = all_vars, drop = FALSE) +
theme_minimal() +
labs(
x = "Variant A",
y = "Variant B"
) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, face = "italic"),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank(),
axis.text.y = element_text(face = "italic")
) +
coord_fixed()
ggplot(heatmap_data_upper, aes(x = variant_A, y = variant_B, fill = p_epistasis)) +
geom_tile(color = "grey85") +
# Use scale_fill_viridis_c() for a continuous viridis color scale
scale_fill_viridis_c(
name = "p-epistasis",
option = "D", # Option "D" is the default viridis palette
limits = c(0, 0.25),
oob = scales::squish # Handles values outside the limits gracefully
) +
# Ensure the axes include all variants to maintain the square shape
scale_x_discrete(limits = all_vars, drop = FALSE) +
scale_y_discrete(limits = all_vars, drop = FALSE) +
theme_minimal() +
labs(
x = "Variant A",
y = "Variant B"
) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, face = "italic"),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank(),
axis.text.y = element_text(face = "italic")
) +
coord_fixed()
ggplot(heatmap_data_upper, aes(x = variant_A, y = variant_B, fill = p_epistasis)) +
geom_tile(color = "grey85") +
# Use scale_fill_viridis_c() for a continuous viridis color scale
scale_fill_viridis_c(
name = "p-epistasis",
option = "D" # Option "D" is the default viridis palette
# oob = scales::squish # Handles values outside the limits gracefully
) +
# Ensure the axes include all variants to maintain the square shape
scale_x_discrete(limits = all_vars, drop = FALSE) +
scale_y_discrete(limits = all_vars, drop = FALSE) +
theme_minimal() +
labs(
x = "Variant A",
y = "Variant B"
) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, face = "italic"),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank(),
axis.text.y = element_text(face = "italic")
) +
coord_fixed()
ggplot(heatmap_data_upper, aes(x = variant_A, y = variant_B, fill = p_epistasis)) +
geom_tile(color = "grey85") +
# Use scale_fill_viridis_c() for a continuous viridis color scale
scale_fill_viridis_c(
name = "p-epistasis",
option = "D", # Option "D" is the default viridis palette
limits = c(0, 0.25),
oob = scales::squish, # Handles values outside the limits gracefully
) +
# Ensure the axes include all variants to maintain the square shape
scale_x_discrete(limits = all_vars, drop = FALSE) +
scale_y_discrete(limits = all_vars, drop = FALSE) +
theme_minimal() +
labs(
x = "Variant A",
y = "Variant B"
) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, face = "italic"),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank(),
axis.text.y = element_text(face = "italic")
) +
coord_fixed()
ggplot(heatmap_data_upper, aes(x = variant_A, y = variant_B, fill = p_epistasis)) +
geom_tile(color = "grey85") +
# Use scale_fill_viridis_c() for a continuous viridis color scale
scale_fill_viridis_c(
name = "p-epistasis",
option = "D", # Option "D" is the default viridis palette
limits = c(0, 0.25),
oob = scales::squish, # Handles values outside the limits gracefully
na.value = "grey50" # Color for any missing p-values on the diagonal
) +
# Ensure the axes include all variants to maintain the square shape
scale_x_discrete(limits = all_vars, drop = FALSE) +
scale_y_discrete(limits = all_vars, drop = FALSE) +
theme_minimal() +
labs(
title = "Epistasis Between Significantly Interacting Variants",
x = "Variant A",
y = "Variant B"
) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, face = "italic"),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank(),
axis.text.y = element_text(face = "italic")
) +
coord_fixed()
ggplot(heatmap_data_upper, aes(x = variant_A, y = variant_B, fill = p_epistasis)) +
geom_tile(color = "grey85") +
# Use scale_fill_viridis_c() for a continuous viridis color scale
scale_fill_viridis_c(
name = "p-epistasis",
option = "D", # Option "D" is the default viridis palette
limits = c(0, 0.25),
oob = scales::squish, # Handles values outside the limits gracefully
na.value = "grey50" # Color for any missing p-values on the diagonal
) +
# Ensure the axes include all variants to maintain the square shape
scale_x_discrete(limits = all_vars, drop = FALSE) +
scale_y_discrete(limits = all_vars, drop = FALSE) +
theme_minimal() +
labs(
x = "Variant A",
y = "Variant B"
) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, face = "italic"),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank(),
axis.text.y = element_text(face = "italic")
) +
coord_fixed()
ggplot(heatmap_data_upper, aes(x = variant_A, y = variant_B, fill = p_epistasis)) +
geom_tile(color = "grey85") +
# Use scale_fill_viridis_c() for a continuous viridis color scale
scale_fill_viridis_c(
name = "p-epistasis",
option = "D", # Option "D" is the default viridis palette
limits = c(0, 0.05),
oob = scales::squish, # Handles values outside the limits gracefully
na.value = "grey50" # Color for any missing p-values on the diagonal
) +
# Ensure the axes include all variants to maintain the square shape
scale_x_discrete(limits = all_vars, drop = FALSE) +
scale_y_discrete(limits = all_vars, drop = FALSE) +
theme_minimal() +
labs(
x = "Variant A",
y = "Variant B"
) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, face = "italic"),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank(),
axis.text.y = element_text(face = "italic")
) +
coord_fixed()
p5 = ggplot(heatmap_data_upper, aes(x = variant_A, y = variant_B, fill = p_epistasis)) +
geom_tile(color = "grey85") +
# Use scale_fill_viridis_c() for a continuous viridis color scale
scale_fill_viridis_c(
name = "p-epistasis",
option = "D", # Option "D" is the default viridis palette
limits = c(0, 0.05),
oob = scales::squish, # Handles values outside the limits gracefully
na.value = "grey50" # Color for any missing p-values on the diagonal
) +
# Ensure the axes include all variants to maintain the square shape
scale_x_discrete(limits = all_vars, drop = FALSE) +
scale_y_discrete(limits = all_vars, drop = FALSE) +
theme_minimal() +
labs(
x = "Variant A",
y = "Variant B"
) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, face = "italic"),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank(),
axis.text.y = element_text(face = "italic")
) +
coord_fixed()
p5
p4
p5
ggsave(plot = p4, filename = 'Fig4_clca_aac_epistasis.png', width = 500 * 3, height = 700*2, units = 'px', dpi = 'retina')
ggsave(plot = p4, filename = 'Fig4_clca_aac_epistasis.png', width = 800 * 3, height = 500*2, units = 'px', dpi = 'retina')
p4
p4 = plot_epistasis(epistatic_effects = CLCA_significant_epi) +
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1, face = "italic")
p4
p4 = plot_epistasis(epistatic_effects = CLCA_significant_epi) +
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1, face = "italic")
)
p4
p4 = plot_epistasis(epistatic_effects = CLCA_significant_epi) +
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1, face = "italic")
)
p4
#Epistasis
CLCA_gene_epi = clca_cesa$epistasis$CLCA_gene_epi
CLCA_significant_epi <- CLCA_gene_epi[p_epistasis <= 0.05]
p4 = plot_epistasis(epistatic_effects = CLCA_significant_epi) +
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1, face = "italic")
)
p4
plot_epistasis(epistatic_effects = CLCA_significant_epi) +
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1, face = "italic")
)
?plot_epistasis
p4 = plot_epistasis(epistatic_effects = CLCA_significant_epi)
p4
plot_epistasis(epistatic_effects = CLCA_significant_epi) +
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1, face = "italic")
)
p4 <- plot_epistasis(epistatic_effects = CLCA_significant_epi) +
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1, face = "italic")
)
# 2. To display the plot, simply run the variable name.
p4
p4 <- plot_object_list[[1]]
p4[2]
p4[[2]]
p4[[1]]
p4 <- p4 +
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1, face = "italic")
)
p4
p4 = plot_epistasis(epistatic_effects = CLCA_significant_epi)
p4
p4[[1]]
p4[[1]]+
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1, face = "italic")
)
p4
p4 = p4[[1]]+
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1, face = "italic")
)
p4
source("D:/HCC_CES-Survival/graph.R", echo = TRUE)
p4 = plot_epistasis(epistatic_effects = CLCA_significant_epi)
p4 = p4[[1]]+
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, face = "italic")
)
p4
p4 = plot_epistasis(epistatic_effects = CLCA_significant_epi)
p4 = p4[[1]]+
theme(
axis.text.x = element_text(angle = 45, face = "italic")
)
p4
p4 = plot_epistasis(epistatic_effects = CLCA_significant_epi)
p4 = p4[[1]]+
theme(
axis.text.x = element_text(angle = 45, vjust = 1, face = "italic")
)
p4
p4 = plot_epistasis(epistatic_effects = CLCA_significant_epi)
p4 = p4[[1]]+
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, face = "italic")
)
p4
p4 = plot_epistasis(epistatic_effects = CLCA_significant_epi)
p4 = p4[[1]]+
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = -0.1, face = "italic")
)
p4
p4 = plot_epistasis(epistatic_effects = CLCA_significant_epi)
p4 = p4[[1]]+
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = -0.5, face = "italic")
)
p4
p4 = plot_epistasis(epistatic_effects = CLCA_significant_epi)
p4 = p4[[1]]+
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.5, face = "italic")
)
p4
ggsave(plot = p4, filename = 'Fig4_clca_aac_epistasis.png', width = 800 * 3, height = 500*2, units = 'px', dpi = 'retina')
ggsave(plot = p4, filename = 'Fig4_clca_aac_epistasis.png', width = 800 * 3, height = 600*2, units = 'px', dpi = 'retina')
ggsave(plot = p4, filename = 'Fig4_clca_aac_epistasis.png', width = 800 * 3, height = 700*2, units = 'px', dpi = 'retina')
p5
p5 = ggplot(heatmap_data_upper, aes(x = variant_A, y = variant_B, fill = p_epistasis)) +
geom_tile(color = "grey85") +
# Use scale_fill_viridis_c() for a continuous viridis color scale
scale_fill_viridis_c(
name = "p-epistasis",
option = "D", # Option "D" is the default viridis palette
limits = c(0, 0.05),
oob = scales::squish, # Handles values outside the limits gracefully
na.value = "grey50" # Color for any missing p-values on the diagonal
) +
# Ensure the axes include all variants to maintain the square shape
scale_x_discrete(limits = all_vars, drop = FALSE) +
scale_y_discrete(limits = all_vars, drop = FALSE) +
theme_minimal() +
labs(
x = "Gene A",
y = "Gene B"
) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, face = "italic"),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank(),
axis.text.y = element_text(face = "italic")
) +
coord_fixed()
p5
ggsave(plot = p5, filename = 'Fig4_tcga_aac_epistasis.png', width = 700 * 2, height = 700*2, units = 'px', dpi = 'retina')
ggsave(plot = p5, filename = 'Fig4_tcga_aac_epistasis.png', width = 700 * 3, height = 700*3, units = 'px', dpi = 'retina')
